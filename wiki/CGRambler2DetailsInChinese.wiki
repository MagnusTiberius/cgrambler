#labels CGRambler,华南师范大学,李海全
=关于官方网站：=
http://code.google.com/p/cgrambler/ 是CGRambler2.0的官方网站，你可以在那下载到本项目的最新源码，高清截图。请统一在本页面最底端发表评论，以便本人回复。


=项目简介：=
CGRambler2.0是继CGRambler1.0之后开发的一款基于DirectX 10的图形渲染引擎，关于CGRambler1.0，请浏览http://user.qzone.qq.com/499482794/blog/1285834895
相比CGRambler1.0，CGRambler2.0经过重新架构（几乎是重写），将更加注重引擎构架本身，即“看不见的渲染艺术”，而不是华丽的Shader。另外，本项目采用开源方式，可自由用于商业或非商业用途。

=项目配置: =
首先要有win7,然后要安装最新版的DirectX 10 SDK,先去编译SDK里面的DXUT,然后把SDK的include目录和lib目录（包括刚才的DXUT在内）增加到VC。再把SDK的Utilities里面的fxc(Shader编译器）复制到Windows/system32/下面。另外，如果在Debug模式下编译时，你还虽然增加Visual Leak Detector来检查内存泄漏。当然，这个也可以去掉。

=关于作者：=
华南师范大学 08级 李海全 cgrambler@gmail.com


---------------------------------------------------------------------------------------------------------------


=Class Diagram=
[http://img1.ph.126.net/uo4GMkUHf6y-ZLwEVaMWqg==/3181511661762413508.jpg]


-------------------------------------------------------------------------------------------------------------------


=模块一 基于FX Composer SAS的Shader载入= 
完成时间 2011/2/14

FX Composer是目前两大Shader的IDE之一，它有很强大的SAS，从而使开发者在编写Shaders时用不着写C++。本模块的作用就是根据FX Composer的SAS，全自动地进行Shader变量的绑定，更新，资源（比如纹理）的载入，控制渲染流程。有了本模块，Shader的载入将变得极奇方便。
比如，建立下面图片中，Phong_Shadowed_Glow的场景，你只需要编写如下代码


void InitCGRambler()
{
	g_pSceneManager=SceneManager::getSingleton();
	g_pSceneManager->init( DXUTGetD3D10Device());

	g_pCamera=g_pSceneManager->getCamera();
	g_pCamera->setPosition(D3DXVECTOR4(1.356086f,0.049764f,-9.334431f,1.0f));
	g_pCamera->setLookAt(D3DXVECTOR4(1.13701f,0.069804,-8.358729,1.0f));

	LightPtr light=g_pSceneManager->createLight("SpotLight",D3DXVECTOR4(10.0f,10.0f,-9.0f,0.0f),D3DXVECTOR4(0.0f,0.0f,0.0f,0.0f), D3DXVECTOR4(1.0f,1.0f,1.0f,1.0f),30.0f,2.0f);

	EffectPtr pEffect=g_pSceneManager->createEffect("effectName","PhongShadowed.fx");
	EffectPtr pGlow=g_pSceneManager->createEffect("glow","Glow.fx");

	MeshPtr pMesh=g_pSceneManager->createMesh("meshName","goof_knight.sdkmesh","");
	pMesh->setSize(D3DXVECTOR4(10.0f,10.0f,10.0f,10.0f));
	pMesh->setDirection(D3DXVECTOR4(-0.8f,0.0f,-1.0f,1.0f));
	pMesh->setPosition(D3DXVECTOR4(0.0f,0.05f,0.0f,1.0f));

	MeshPtr pFloor=g_pSceneManager->createMesh("floor","seafloor.sdkmesh","");
	pFloor->setSize(D3DXVECTOR4(0.3f,0.3f,0.3f,0.3f));

	pEffect->addMesh(pMesh);
	pEffect->addMesh(pFloor);

	pGlow->addMesh(pMesh);
	pGlow->addMesh(pFloor);
}



=New_Shaders_InFXC=
[http://img764.ph.126.net/syLssQA-o3hi1rSzFXC59A==/1245526771945386828.jpg]


= Gooch_Bump_Reflect_InFXC=
[http://img692.ph.126.net/XKaRRwgl53WzRG6noWETrQ==/2883429661425156089.jpg]


=Phong_Shadowed_InFXC=
[http://img764.ph.126.net/V_VjH-Iz-GqmHLCHiuQHBQ==/1245526771945386842.jpg]


=Phong_Shadowed_Glow_InFXC=
[http://img775.ph.126.net/a12-s48E-KhdgaL02sycEg==/4844184349190786611.jpg]


=Gooch_Bump_Reflect_InCGRambler2.0=
[http://img229.ph.126.net/fVMXpvs5uEmRrhVcKutHXA==/1461981029036716455.jpg]


=Phong_Shadowed_InCGRambler2.0=
[http://img685.ph.126.net/JqKSeq48rsIrRDaBCTxDbg==/2797298318551807002.jpg]


=Phong_Shadowed_Glow_InCGRambler2.0=
[http://img849.ph.126.net/uYcWeInJjDr-8aLBsEyMkA==/2695967326935761404.jpg]


= <font color=#FF0000> 请统一在本页面最底端发表评论，以便本人回复。 </font> =